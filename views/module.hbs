<div class="content px-3">
    {{>navigation}}
    <div class="container bg-white rounded my-3">
        <div class="row d-flex justify-content-between">
        <div class="col my-auto d-flex">
            <span class="my-auto">All Modules List</span>
            <div class="bg-danger-subtle px-2 mx-2 rounded">
            <span class="text-danger">{{numModules}}</span>
            </div>
        </div>
        <div class="col right-side d-flex justify-content-end">
            <a href="#" class="guide mx-2 my-auto">
            <div class="text-center">
                <img
                src="/images/guide.png"
                alt=""
                style="width: 2rem"
                />
                <br />
                <span>Guide</span>
            </div>
            </a>

            <a href="#" class="mx-2 my-auto d-flex">
            <i class="bi bi-cloud-upload me-2"></i>
            Import
            </a>

            <a href="#" class="mx-2 my-auto d-flex">
            <i class="bi bi-archive me-2"></i>
            Archived
            </a>

            <button
            type="button"
            class="btn btn-danger btn-graph ms-4 my-auto"
            data-bs-toggle="modal"
            data-bs-target="#addModule"
            style="width: 10rem"
            data-projectid="{{project.ProjectID}}"
            >
            <i class="bi bi-plus"></i> Add Modules
            </button>
        </div>
        </div>
    </div>

    <div class="container bg-white rounded h-100 p-3 mb-2">
        <div class="row" id="modules-container">
            <div class="col-3 mb-3">
                <div class="card" style="min-height: 100vh">
                    <div class="card-header d-flex justify-content-between">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="modules" data-id="" onchange="toggleCheckAll(this)" style="display: none;"/>
                            <label class="form-check-label" for="modules">
                                Modules (<span class="num-modules">{{numModules}}</span>)
                            </label>
                        </div>
                        <div>
                            <a href="#" data-bs-toggle="modal" data-bs-target="#addModule" data-bs-toggle="tooltip" title="Add Module" class="mx-2">
                                <img src="/images/add.svg" alt="" style="width: 1rem; height: 1rem" class="mb-1" />
                            </a>
                            <a href="#" data-bs-toggle="tooltip" title="Delete Parent Module" class="mx-2 my-auto">
                                <i class="bi bi-trash text-danger"></i>
                            </a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="module-list" class="list-group">
                            {{#each project.Modules}}
                            <a href="#" class="list-group-item list-group-item-action rounded border my-2 py-3 module-link" data-id="{{_id}}" data-name="{{Name}}" data-projectID="{{../project.ProjectID}}">
                                <div class="form-check">
                                    <input class="form-check-input module-item module-checkbox-" type="checkbox" value="" id="module-item-{{@index}}" style="display: none;">
                                    <label class="form-check-label" for="module-item-{{@index}}" style="overflow-wrap: break-word; word-wrap: break-word; word-break: break-word;">{{Name}}</label>
                                </div>
                            </a>

                            
                            {{/each}}
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const modulesContainer = document.getElementById('modules-container');

                modulesContainer.addEventListener('click', async function(event) {
                    if (event.target.closest('.module-link')) {
                        event.preventDefault();
                        const moduleLink = event.target.closest('.module-link');
                        const moduleId = moduleLink.getAttribute('data-id');
                        const moduleName = moduleLink.getAttribute('data-name');
                        const projectId = moduleLink.getAttribute('data-projectid'); // Sử dụng 'data-projectid' thay vì 'data-projectID'

                        if (modulesContainer.querySelector(`.exists-${moduleId}`) == null) {
                            try {
                            console.log(projectId)
                            const response = await fetch(`/project/${projectId}/module/children/${moduleId}`);
                            const childModules = await response.json();

                            // Xây dựng HTML cho danh sách module con
                            const childModulesHtml = childModules.map((module, index) => `
                                <div class="sortable-module-list" data-id="${module._id}">
                                    <a href="#" class="list-group-item list-group-item-action rounded border my-2 py-3 module-link" data-id="${module._id}" data-name="${module.Name}" data-projectID="${projectId}">
                                        <div class="form-check">
                                            <input class="form-check-input module-item module-checkbox-${moduleId}" type="checkbox" value="" id="module-item-${index}" style="display: none;">
                                            <label class="form-check-label" for="module-item-${index}" style="overflow-wrap: break-word; word-wrap: break-word; word-break: break-word;">${module.Name}</label>
                                        </div>
                                    </a>
                                </div>
                            `).join('');

                            const newCol = document.createElement('div');
                            newCol.classList.add('col-3');
                            newCol.classList.add('mb-3');
                            newCol.classList.add(`exists-${moduleId}`);
                            newCol.setAttribute('data-id', `${moduleId}`);

                            newCol.innerHTML = `
                                <div class="card" style="min-height: 100vh">
                                    <div class="card-header d-flex justify-content-between">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" id="modules" data-id="${moduleId}"" onchange="toggleCheckAll(this)" style="display: none;"/>
                                            <label class="form-check-label" for="modules" style="overflow-wrap: break-word; word-wrap: break-word; word-break: break-word;">
                                                ${moduleName} (<span class="num-modules">${childModules.length}</span>)
                                            </label>
                                            <a
                                                data-bs-toggle="modal"
                                                data-bs-target="#editModuleModal"
                                                href="#"
                                                data-bs-toggle="tooltip"
                                                title="Edit"
                                                class="my-auto mx-2"
                                                data-id="${moduleId}"
                                                data-name="${moduleName}"
                                                data-projectId="${projectId}"
                                            >
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        </div>
                                        <div>
                                            <a href="#" data-bs-toggle="modal" data-bs-target="#addModule" data-bs-toggle="tooltip" title="Add Module" class="mx-2" data-projectid="${projectId}" data-parentmodule="${moduleName}">
                                                <img src="/images/add.svg" alt="" style="width: 1rem; height: 1rem" class="mb-1" />
                                            </a>
                                            <a href="#" data-bs-toggle="tooltip" title="Delete Parent Module" class="mx-2 my-auto delete-parent-module" data-id="${moduleId}" data-projectID="${projectId}">
                                                <i class="bi bi-trash text-danger"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div id="sortable-child-modules" class="list-group">
                                            ${childModulesHtml}
                                        </div>
                                    </div>
                                </div>
                            `;

                            modulesContainer.appendChild(newCol);

                            // Áp dụng Sortable cho danh sách module con
                            const sortableChildModules = new Sortable(newCol.querySelector('#sortable-child-modules'), {
                                animation: 150,
                                onEnd: async function(event) {
                                    const order = Array.from(newCol.querySelectorAll('.sortable-module-list')).map((item, index) => {
                                        return {
                                            id: item.getAttribute('data-id'),
                                            order: index + 1 // Order bắt đầu từ 1
                                        };
                                    });

                                    try {
                                        const response = await fetch(`/project/${projectId}/module/children/${moduleId}/updateOrder`, {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json'
                                            },
                                            body: JSON.stringify({ order })
                                        });

                                        if (!response.ok) {
                                            throw new Error('Failed to update child module order');
                                        }
                                    } catch (error) {
                                        console.error('Error updating child module order:', error);
                                        alert('An error occurred while updating the child module order.');
                                    }
                                }
                            });

                        } catch (error) {
                            console.error('Error fetching child modules:', error);
                            alert('Failed to fetch child modules.');
                        }
                        }

                        
                    }
                });
            });
           
        </script>

        <script>
        document.addEventListener('DOMContentLoaded', function() {
            const moduleList = document.getElementById('module-list');

            const sortable = new Sortable(moduleList, {
                animation: 150,
                onEnd: async function(event) {
                    const order = Array.from(moduleList.children).map((item, index) => {
                        return {
                            id: item.getAttribute('data-id'),
                            order: index + 1 // Order bắt đầu từ 1
                        };
                    });

                    try {
                        const response = await fetch('/project/666011d01cc6e634de0ff711/module/updateOrder', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ order })
                        });

                        if (!response.ok) {
                            throw new Error('Failed to update module order');
                        }
                    } catch (error) {
                        console.error('Error updating module order:', error);
                        alert('An error occurred while updating the module order.');
                    }
                }
            });
        });
        </script>

    </div>

    
</div>
    <div
    class="modal fade"
    id="addModule"
    tabindex="-1"
    aria-labelledby="exampleModalLabel"
    aria-hidden="true"
    data-projectid="{{project.ProjectID}}"
    >
        <div class="modal-dialog">
            <form action="" id="moduleForm" class="needs-validation" novalidate >
            <div class="modal-content">
                <div class="modal-header">
                <h6 class="modal-title fs-5" id="exampleModalLabel">
                    Module/Sub Module
                </h6>
                <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                ></button>
                </div>
                <div class="modal-body">
                <select
                    class="form-select mb-3"
                    name="parentModule"
                    aria-label="Default select example"
                >
                    <option value="" selected>Select Module</option>
                    {{#each project.AllModules}}
                    <option value="{{_id}}">{{Name}}</option>
                    {{/each}}
                </select>
                <input
                    type="text"
                    name="moduleName"
                    class="form-control"
                    placeholder="Please enter the module name *"
                    required
                />
                <div class="invalid-feedback">
                    Please enter the module name.
                </div>
                </div>
                <div class="modal-footer">
                <button type="submit" class="btn btn-danger">Save</button>
                <button
                    type="button"
                    class="btn btn-outline-danger"
                    data-bs-dismiss="modal"
                >
                    Cancel
                </button>
                </div>
            </div>
            </form>
        </div>
    </div>
<form action="" id="editModuleForm" class="needs-validation" novalidate >
    <div class="modal fade" id="editModuleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" >
        <div class="modal-dialog">      
            <input type="hidden" name="projectId" value="{{project.ProjectID}}">
            <input type="hidden" name="moduleId">
            <div class="modal-content">
                <div class="modal-header">
                <h6 class="modal-title fs-5" id="exampleModalLabel">
                    Edit Module
                </h6>
                <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                ></button>
                </div>
                <div class="modal-body">
                <input
                    type="text"
                    name="moduleName"
                    class="form-control"
                    placeholder="Please enter the module name *"
                    required
                />
                <div class="invalid-feedback">
                    Please enter the module name.
                </div>
                </div>
                <div class="modal-footer">
                <button type="submit" class="btn btn-danger">Update</button>
                <button
                    type="button"
                    class="btn btn-outline-danger"
                    data-bs-dismiss="modal"
                >
                    Cancel
                </button>
                </div>
            </div>
            
        </div>
    </div>
</form>
